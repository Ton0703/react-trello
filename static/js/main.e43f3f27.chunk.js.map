{"version":3,"sources":["components/Header/index.jsx","redux/theme/acion.js","redux/types.js","images/add.js","components/EditButton/index.jsx","components/ListEditor/index.jsx","images/close.js","components/CardEditor/index.jsx","images/edit.js","components/Card/index.jsx","redux/card/action.js","images/delete.js","components/List/index.jsx","redux/list/action.js","components/AddList/index.jsx","components/Board/index.jsx","App.js","serviceWorker.js","redux/list/reducer.js","redux/card/reducer.js","redux/board/reducer.js","redux/theme/reducer.js","redux/index.js","index.js"],"names":["lists","Header","dispatch","useDispatch","useState","visible","setVisible","bg","useSelector","state","theme","className","style","background","onClick","map","item","index","key","color","type","payload","themeChange","add","t","class","viewBox","version","xmlns","p-id","width","height","fill","d","Button","title","handleSave","handleDelete","Editor","props","handleChangeTitle","saveList","setEditingTitle","addList","autoFocus","value","onChange","onKeyDown","e","keyCode","preventDefault","trim","onBlur","close","onSave","onCancel","onDelete","setAddingCard","text","setText","placeholder","target","handleCancel","edit","Card","cardId","listId","card","editing","setEditing","hover","setHover","startHover","endHover","startEditing","updateCard","deleteCard","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","Delete","List","list","editingTitle","addingCard","setTitle","editListTitle","id","updateList","toggleAddingCard","AddCard","uuid","addCard","onClickOutside","droppableId","_snapshot","cards","marginRight","AddList","toggleAddingList","Board","board","addingList","setAddingList","onDragEnd","source","destination","sourceListId","destListId","oldCardIndex","newCardIndex","oldListIndex","newListIndex","direction","App","Boolean","window","location","hostname","match","intialState","initialState","combineReducers","action","rest","filter","newCards","Array","from","splice","removedCard","sourceCards","destinationCards","newLists","removedList","newList","persistConfig","storage","persistReducers","persistReducer","rootReducer","store","createStore","compose","composeWithDevTools","applyMiddleware","thunk","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e43f3f27.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {themeChange} from '../../redux/theme/acion'\r\nimport \"./index.scss\";\r\n\r\nconst lists = [\r\n    'rgb(75, 191, 107)',\r\n    '#519839',\r\n    '#B04632',\r\n    '#D29034',\r\n    '#0079BF',\r\n]\r\n\r\nfunction Header() {\r\n    const dispatch = useDispatch()\r\n  const [visible, setVisible] = useState(false);\r\n  const { bg } = useSelector((state) => state.theme);\r\n\r\n  const handleClick = () => {\r\n    setVisible(!visible);\r\n  };\r\n  const handleColorClick = (color) => {\r\n        dispatch(themeChange(color))\r\n  }\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"logo\"></div>\r\n      <div className=\"theme\" style={{ background: bg }} onClick={handleClick}>\r\n        {visible && <div className=\"color-lists\">\r\n               {lists.map((item, index) => (\r\n                   <div className='color-item' key={index} style={{background: item}} onClick={() => handleColorClick(item)} >\r\n\r\n                   </div>\r\n               ))}\r\n            </div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import * as TYPES from '../types'\r\n\r\nexport const themeChange = (color) => {\r\n    return {\r\n        type: TYPES.CHANGE_THEME,\r\n        payload: color\r\n    }\r\n}","//List\r\nexport const ADD_LIST = 'ADD_LIST'\r\nexport const MOVE_LIST = 'MOVE_LIST'\r\nexport const DELETE_LIST = 'DELETE_LIST'\r\nexport const UPDATE_LIST = 'UPDATE_LIST'\r\n\r\n//Card\r\nexport const ADD_CARD = 'ADD_CARD'\r\nexport const MOVE_CARD = 'MOVE_CARD'\r\nexport const DELETE_CARD = 'DELETE_CARD'\r\nexport const UPDATE_CARD = 'UPDATE_CARD'\r\n\r\n//theme\r\nexport const CHANGE_THEME = 'CHANGE_THEME'","import React from \"react\";\r\n\r\nfunction add() {\r\n  return (\r\n    <svg\r\n      t=\"1595957449784\"\r\n      class=\"icon\"\r\n      viewBox=\"0 0 1024 1024\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      p-id=\"3468\"\r\n      width='12px'\r\n      height='12px'\r\n      fill='#5e6c84'\r\n    >\r\n      <path\r\n        d=\"M976 464h-416v-416a48 48 0 1 0-96 0v416h-416a48 48 0 1 0 0 96h416v416a48 48 0 1 0 96 0v-416h416a48 48 0 1 0 0-96z\"\r\n        p-id=\"3469\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default add;\r\n","import React from \"react\";\r\nimport {useSelector} from 'react-redux'\r\nimport \"./index.scss\";\r\n\r\nfunction Button({ title, handleSave, handleDelete }) {\r\n    const {bg} = useSelector(state => state.theme)\r\n  return (\r\n    <>\r\n      <div className=\"editButton\" onClick={handleSave} style={{background: bg}}>\r\n        {title}\r\n      </div>\r\n      {handleDelete && (\r\n        <div className=\"deleteButton\" onClick={handleDelete}>\r\n          删除\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport Button from \"../EditButton\";\r\nimport \"./index.scss\";\r\n\r\n\r\nfunction Editor(props) {\r\n  const {\r\n    title,\r\n    handleChangeTitle,\r\n    saveList,\r\n    setEditingTitle,\r\n    addList,\r\n  } = props;\r\n  const handlePress = (e) => {\r\n    if (e.keyCode === 13) {\r\n      e.preventDefault();\r\n      if (title.trim() !== \"\") {\r\n        saveList && saveList();\r\n        addList && addList();\r\n        setEditingTitle(false);\r\n      }\r\n    }\r\n  };\r\n  const handleBlur = () => {\r\n    if (title.trim() !== \"\") {\r\n      saveList && saveList();\r\n      addList && addList();\r\n    }\r\n    setEditingTitle(false);\r\n  };\r\n  return (\r\n    <div className={`${addList ? 'wrap' : ''}`}>\r\n      <TextareaAutosize\r\n        autoFocus\r\n        className=\"List-Title-Textarea\"\r\n        value={title}\r\n        onChange={handleChangeTitle}\r\n        onKeyDown={handlePress}\r\n        onBlur={handleBlur}\r\n      />\r\n      {addList && (\r\n        <div>\r\n          <Button title=\"添加列表\" handleSave={() => addList(title)} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\n\r\nfunction close() {\r\n  return (\r\n    <svg\r\n      t=\"1595943543021\"\r\n      viewBox=\"0 0 1024 1024\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      p-id=\"2284\"\r\n      width='16px'\r\n      height='16px'\r\n      className='close'\r\n    >\r\n      <path\r\n        d=\"M583.168 523.776L958.464 148.48c18.944-18.944 18.944-50.176 0-69.12l-2.048-2.048c-18.944-18.944-50.176-18.944-69.12 0L512 453.12 136.704 77.312c-18.944-18.944-50.176-18.944-69.12 0l-2.048 2.048c-19.456 18.944-19.456 50.176 0 69.12l375.296 375.296L65.536 899.072c-18.944 18.944-18.944 50.176 0 69.12l2.048 2.048c18.944 18.944 50.176 18.944 69.12 0L512 594.944 887.296 970.24c18.944 18.944 50.176 18.944 69.12 0l2.048-2.048c18.944-18.944 18.944-50.176 0-69.12L583.168 523.776z\"\r\n        fill=\"#A1A2A3\"\r\n        p-id=\"2285\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default close;\r\n","import React, { useState } from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\nimport EditButtons from \"../EditButton\";\r\nimport Close from \"../../images/close\";\r\nimport \"./index.scss\";\r\n\r\nfunction Editor(props) {\r\n  const { onSave, onCancel, onDelete, setAddingCard, title } = props;\r\n  const [text, setText] = useState(props.text || \"\");\r\n  const handleChangeText = (e) => {\r\n    setText(e.target.value);\r\n  };\r\n  const onEnter = (e) => {\r\n    if (e.keyCode === 12) {\r\n      e.preventDefault();\r\n      onSave(text);\r\n      setAddingCard(false);\r\n    }\r\n  };\r\n  const handleBlur = () => {\r\n    if (text === \"\") {\r\n      setAddingCard(false);\r\n    } else {\r\n      onSave(text);\r\n      setAddingCard(false);\r\n    }\r\n  };\r\n  const handleSave = () => {\r\n    if (text === \"\") {\r\n      return;\r\n    } else {\r\n      onSave(text);\r\n      setAddingCard(false);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Edit-Card\">\r\n      <div className=\"Card\">\r\n        <TextareaAutosize\r\n          autoFocus\r\n          className=\"Edit-Card-Textarea\"\r\n          placeholder=\"为这张卡片输入标题...\"\r\n          value={text}\r\n          onChange={handleChangeText}\r\n          onKeyDown={onEnter}\r\n          onBlur={handleBlur}\r\n        />\r\n      </div>\r\n      <div className=\"edit-btn\">\r\n        <EditButtons\r\n          handleSave={handleSave}\r\n          title={title}\r\n          handleDelete={onDelete}\r\n          handleCancel={onCancel}\r\n        />\r\n        <div style={{width: '32px', height: '32px'}} onClick={() => setAddingCard(false)}>\r\n           <Close />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n","import React from \"react\";\r\n\r\nfunction edit() {\r\n  return (\r\n    <svg\r\n      t=\"1595945776372\"\r\n      class=\"icon\"\r\n      viewBox=\"0 0 1024 1024\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      p-id=\"3063\"\r\n      width='16px'\r\n      height='16px'\r\n    >\r\n      <path\r\n        d=\"M409.436 779.605L813.83 243.011a18.05 18.05 0 0 0 3.705-10.995c0-6.005-2.914-11.33-7.405-14.638l-63.038-47.476a18.265 18.265 0 0 0-11.12-3.743c-5.943 0-11.229 2.82-14.59 7.196L316.665 710.429l-70.997 190.637 163.767-121.388zM187.779 899.973l80.464-216.086L677.77 140.521c13.466-17.689 34.533-28.991 58.243-28.991 16.586 0 31.879 5.531 44.138 14.849l62.807 47.31c17.821 13.415 29.223 34.53 29.223 58.307 0 16.549-5.523 31.808-14.827 44.034L448.285 818.781 262.672 956.407s-32.222 23.556-60.585 2.185c-28.326-21.335-14.308-58.619-14.308-58.619z\"\r\n        p-id=\"3064\"\r\n      ></path>\r\n      <path\r\n        d=\"M582.997 262.563L760.49 396.038l32.841-43.654-177.566-133.475z\"\r\n        p-id=\"3065\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default edit;\r\n","import React, { useState } from \"react\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteCard, updateCard } from \"../../redux/card/action\";\r\nimport CardEditor from \"../CardEditor\";\r\nimport Edit from \"../../images/edit\";\r\nimport \"./index.scss\";\r\n\r\nfunction Card({ cardId, index, listId }) {\r\n  const dispatch = useDispatch();\r\n  const card = useSelector((state) => state.card[cardId]);\r\n  const [editing, setEditing] = useState(false);\r\n  const [hover, setHover] = useState(false);\r\n  const startHover = () => {\r\n    setHover(true);\r\n  };\r\n  const endHover = () => {\r\n    setHover(false);\r\n  };\r\n  const startEditing = () => {\r\n    setEditing(true);\r\n  };\r\n  const endEditing = () => {\r\n    setEditing(false);\r\n    setHover(false);\r\n  };\r\n  const DeleteCard = () => {\r\n    dispatch(deleteCard(listId, cardId));\r\n  };\r\n  const editCard = (text) => {\r\n    dispatch(updateCard(cardId, text));\r\n  };\r\n  return !editing ? (\r\n    <Draggable draggableId={card.cardId} index={index}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          className=\"Card\"\r\n          onMouseEnter={startHover}\r\n          onMouseLeave={endHover}\r\n        >\r\n          {hover && (\r\n            <div className=\"Card-Icons\">\r\n              <div className=\"Card-Icon\" onClick={startEditing}>\r\n                <Edit />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {card.text}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  ) : (\r\n    <CardEditor\r\n      title=\"提交修改\"\r\n      text={card.text}\r\n      onSave={editCard}\r\n      onDelete={DeleteCard}\r\n      onCancel={endEditing}\r\n      setAddingCard={setEditing}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import * as TYPRS from '../types'\r\nimport uuid from 'react-uuid'\r\n\r\nexport const addCard = (id, text) => {\r\n    return {\r\n        type: TYPRS.ADD_CARD,\r\n        payload: {\r\n            listId: id,\r\n            text,\r\n            cardId: uuid()\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteCard = (listId, cardId) => {\r\n    return {\r\n        type: TYPRS.DELETE_CARD,\r\n        payload: {\r\n            listId,\r\n            cardId\r\n        }\r\n    }\r\n}\r\n\r\nexport const updateCard = (cardId, text) => {\r\n    return {\r\n        type: TYPRS.UPDATE_CARD,\r\n        payload: {\r\n            cardId,\r\n            text\r\n        }\r\n    }\r\n}","import React from \"react\";\r\n\r\nfunction Delete() {\r\n  return (\r\n    <svg\r\n      t=\"1595952037826\"\r\n      viewBox=\"0 0 1024 1024\"\r\n      version=\"1.1\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      p-id=\"2291\"\r\n      width='16px'\r\n      height='16px'\r\n    >\r\n      <path\r\n        d=\"M236.307692 236.307692v685.292308a23.630769 23.630769 0 0 0 23.63077 23.630769h504.123076a23.630769 23.630769 0 0 0 23.63077-23.630769V236.307692H236.307692z m393.846154-78.76923v-55.138462a23.630769 23.630769 0 0 0-23.630769-23.630769H417.476923a23.630769 23.630769 0 0 0-23.630769 23.630769v55.138462h236.307692z m78.769231 0h275.692308a39.384615 39.384615 0 1 1 0 78.76923h-118.153847v708.923077c0 43.504246-35.264985 78.769231-78.76923 78.769231H236.307692c-43.504246 0-78.769231-35.264985-78.76923-78.769231V236.307692H39.384615a39.384615 39.384615 0 0 1 0-78.76923h275.692308V78.769231c0-43.504246 35.264985-78.769231 78.769231-78.769231h236.307692c43.504246 0 78.769231 35.264985 78.769231 78.769231v78.769231zM433.230769 393.846154a39.384615 39.384615 0 0 1 39.384616 39.384615v315.076923a39.384615 39.384615 0 0 1-78.769231 0V433.230769a39.384615 39.384615 0 0 1 39.384615-39.384615z m157.538462 0a39.384615 39.384615 0 0 1 39.384615 39.384615v315.076923a39.384615 39.384615 0 0 1-78.769231 0V433.230769a39.384615 39.384615 0 0 1 39.384616-39.384615z\"\r\n        fill=\"#8a8a8a\"\r\n        p-id=\"2292\"\r\n      ></path>\r\n    </svg>\r\n  );\r\n}\r\n\r\nexport default Delete;\r\n","import React, { useState } from \"react\";\r\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./index.scss\";\r\nimport ListEditor from \"../ListEditor\";\r\nimport Card from \"../Card\";\r\nimport CardEditor from \"../CardEditor\";\r\nimport Delete from \"../../images/delete\";\r\nimport Add from \"../../images/add\";\r\n\r\nimport { updateList, deleteList } from \"../../redux/list/action\";\r\nimport { addCard } from \"../../redux/card/action\";\r\n\r\nfunction List({ listId, index }) {\r\n  const dispatch = useDispatch();\r\n  const list = useSelector((state) => state.list[listId]);\r\n  const [editingTitle, setEditingTitle] = useState(false);\r\n  const [addingCard, setAddingCard] = useState(false);\r\n  const [title, setTitle] = useState(list.title);\r\n\r\n  const handleChangeTitle = (e) => {\r\n    setTitle(e.target.value);\r\n  };\r\n  const editListTitle = () => {\r\n    dispatch(updateList(listId, title));\r\n  };\r\n  const toggleAddingCard = () => {\r\n    setAddingCard(!addingCard);\r\n  };\r\n  const AddCard = (text) => {\r\n    dispatch(addCard(listId, text));\r\n  };\r\n  const handleDelete = () => {\r\n    dispatch(deleteList(listId));\r\n  };\r\n  return (\r\n    <Draggable draggableId={list.id} index={index}>\r\n      {(provided, snapshot) => (\r\n        <div\r\n          ref={provided.innerRef}\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          className=\"List\"\r\n        >\r\n          {editingTitle ? (\r\n            <ListEditor\r\n              list={list}\r\n              title={title}\r\n              handleChangeTitle={handleChangeTitle}\r\n              saveList={editListTitle}\r\n              onClickOutside={editListTitle}\r\n              setEditingTitle={setEditingTitle}\r\n            />\r\n          ) : (\r\n            <div\r\n              className=\"List-Title\"\r\n              onClick={() => setEditingTitle(!editingTitle)}\r\n            >\r\n              {list.title}\r\n              <div className=\"delete\" onClick={handleDelete}>\r\n                <Delete />\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <Droppable droppableId={list.id}>\r\n            {(provided, _snapshot) => (\r\n              <div ref={provided.innerRef}>\r\n                {list.cards &&\r\n                  list.cards.map((cardId, index) => (\r\n                    <Card\r\n                      key={cardId}\r\n                      cardId={cardId}\r\n                      index={index}\r\n                      listId={list.id}\r\n                    />\r\n                  ))}\r\n\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n\r\n          {addingCard ? (\r\n            <CardEditor\r\n              setAddingCard={setAddingCard}\r\n              onSave={AddCard}\r\n              onCancel={toggleAddingCard}\r\n              title=\"添加卡片\"\r\n            />\r\n          ) : (\r\n            <div className=\"Toggle-Add-Card\" onClick={setAddingCard}>\r\n              <div style={{marginRight:'5px'}}>\r\n                <Add />\r\n              </div>{\" \"}\r\n              添加另一张卡片\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import * as TYPES from '../types'\r\nimport uuid from 'react-uuid'\r\n\r\nexport const updateList = (id, title) => {\r\n    return {\r\n        type: TYPES.UPDATE_LIST,\r\n        payload: {\r\n            id,\r\n            title\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteList = (id) => {\r\n    return {\r\n        type: TYPES.DELETE_LIST,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const addList = (title) => {\r\n    return {\r\n        type: TYPES.ADD_LIST,\r\n        payload: {\r\n            title,\r\n            id: uuid()\r\n        }\r\n    }\r\n}","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport ListEditor from \"../ListEditor\";\r\nimport { addList } from \"../../redux/list/action\";\r\nimport \"./index.scss\";\r\n\r\nfunction AddList({toggleAddingList}) {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState(\"\");\r\n  const AddList = () => {\r\n    dispatch(addList(title));\r\n  };\r\n  const handleChangeTitle = e => {\r\n      setTitle(e.target.value)\r\n  }\r\n  return (\r\n    <div>\r\n      <ListEditor\r\n        title={title}\r\n        handleChangeTitle={handleChangeTitle}\r\n        addList={AddList}\r\n        setEditingTitle={toggleAddingList}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddList;\r\n","import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport Add from \"../../images/add\";\r\nimport \"./index.scss\";\r\n\r\nimport List from \"../List\";\r\nimport AddList from \"../AddList\";\r\n\r\nconst Board = () => {\r\n  const dispatch = useDispatch();\r\n  const board = useSelector((state) => state.board);\r\n  const [addingList, setAddingList] = useState(false);\r\n\r\n  const toggleAddingList = () => {\r\n    setAddingList(!addingList);\r\n  };\r\n\r\n  const handleDragEnd = ({ source, destination, type }) => {\r\n    // 如果没有目标就返回原来位置\r\n    if (!destination) return;\r\n\r\n    // Move list\r\n    if (type === \"COLUMN\") {\r\n      if (source.index !== destination.index) {\r\n        dispatch({\r\n          type: \"MOVE_LIST\",\r\n          payload: {\r\n            oldListIndex: source.index,\r\n            newListIndex: destination.index,\r\n          },\r\n        });\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Move card\r\n    if (\r\n      source.index !== destination.index ||\r\n      source.droppableId !== destination.droppableId\r\n    ) {\r\n      dispatch({\r\n        type: \"MOVE_CARD\",\r\n        payload: {\r\n          sourceListId: source.droppableId,\r\n          destListId: destination.droppableId,\r\n          oldCardIndex: source.index,\r\n          newCardIndex: destination.index,\r\n        },\r\n      });\r\n    }\r\n  };\r\n  return (\r\n    <DragDropContext onDragEnd={handleDragEnd}>\r\n      <Droppable droppableId=\"board\" direction=\"horizontal\" type=\"COLUMN\">\r\n        {(provided, _snapshot) => (\r\n          <div className=\"Board\" ref={provided.innerRef}>\r\n            {board.lists.map((listId, index) => {\r\n              return <List listId={listId} key={listId} index={index} />;\r\n            })}\r\n\r\n            {provided.placeholder}\r\n\r\n            <div className=\"Add-List\">\r\n              {addingList ? (\r\n                <AddList toggleAddingList={toggleAddingList} />\r\n              ) : (\r\n                <div onClick={toggleAddingList} className=\"Add-List-Button\">\r\n                  <div className='svg-add'>\r\n                    <Add />\r\n                  </div>\r\n                  添加另一个列表\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Droppable>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\nimport {useSelector} from 'react-redux'\nimport './App.scss';\n\nimport Header from './components/Header'\nimport Board from './components/Board'\n\nfunction App() {\n  const {bg} = useSelector(state => state.theme)\n  return (\n    <div className=\"App\" style={{background: bg}}>\n      <Header />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as TYPES from \"../types\";\r\n\r\nconst intialState = {\r\n  \"00\": {\r\n    id: \"00\",\r\n    title: \"要做的事\",\r\n    cards: ['card-00'],\r\n  },\r\n  \"01\": {\r\n    id: \"01\",\r\n    title: \"进行中\",\r\n    cards: [],\r\n  },\r\n  \"02\": {\r\n    id: \"02\",\r\n    title: \"完成\",\r\n    cards: [],\r\n  },\r\n};\r\n\r\nexport default function BoardReducer(state = intialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.UPDATE_LIST: {\r\n      const { id, title } = action.payload;\r\n      return { ...state, [id]: { ...state[id], title } };\r\n    }\r\n    case TYPES.DELETE_LIST:{\r\n      const id = action.payload\r\n      const {[id]: deleteList, ...rest} = state\r\n      return {\r\n        ...rest\r\n      }\r\n    }\r\n    case TYPES.ADD_LIST: {\r\n      const {title, id} = action.payload\r\n      return {\r\n        ...state, [id]: {id, title, cards: []}\r\n      }\r\n    }\r\n    case TYPES.ADD_CARD:{\r\n      const { listId, cardId } = action.payload;\r\n      return {\r\n        ...state,\r\n        [listId]: { ...state[listId], cards: [...state[listId].cards, cardId] }\r\n      };\r\n    }\r\n    case TYPES.DELETE_CARD:{\r\n      const {listId, cardId} = action.payload\r\n      return {\r\n        ...state, [listId]:{...state[listId], cards: state[listId].cards.filter(item => item !== cardId)}\r\n      }\r\n    }\r\n    case \"MOVE_CARD\": {\r\n      const {\r\n        oldCardIndex,\r\n        newCardIndex,\r\n        sourceListId,\r\n        destListId\r\n      } = action.payload;\r\n      // 在同一个list照片那个移动\r\n      if (sourceListId === destListId) {\r\n        const newCards = Array.from(state[sourceListId].cards);\r\n        const [removedCard] = newCards.splice(oldCardIndex, 1);\r\n        newCards.splice(newCardIndex, 0, removedCard);\r\n        return {\r\n          ...state,\r\n          [sourceListId]: { ...state[sourceListId], cards: newCards }\r\n        };\r\n      }\r\n      // 在不同的list中移动\r\n      const sourceCards = Array.from(state[sourceListId].cards);\r\n      const [removedCard] = sourceCards.splice(oldCardIndex, 1);\r\n      const destinationCards = Array.from(state[destListId].cards);\r\n      destinationCards.splice(newCardIndex, 0, removedCard);\r\n      return {\r\n        ...state,\r\n        [sourceListId]: { ...state[sourceListId], cards: sourceCards },\r\n        [destListId]: { ...state[destListId], cards: destinationCards }\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as TYPES from \"../types\";\r\nconst initialState = {\r\n    'card-00':{\r\n        text: '例如，看电影',\r\n        listId: '00',\r\n        cardId:'card-00'\r\n    }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.ADD_CARD: {\r\n      const { text, listId, cardId } = action.payload;\r\n      return { ...state, [cardId]: { text, listId, cardId } };\r\n    }\r\n    case TYPES.DELETE_CARD: {\r\n      const { cardId } = action.payload;\r\n      const { [cardId]: deleteCard, ...rest } = state;\r\n      return { ...rest };\r\n    }\r\n    case TYPES.UPDATE_CARD:\r\n        const {cardId, text} = action.payload\r\n        return {\r\n            ...state, [cardId]: {...state[cardId], text}\r\n        }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as TYPES from \"../types\";\r\nconst initialState = {\r\n  lists: [\"00\", \"01\", \"02\"],\r\n};\r\n\r\nexport default function BoardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case TYPES.ADD_LIST: {\r\n      const { id } = action.payload;\r\n      return { lists: [...state.lists, id] };\r\n    }\r\n    case TYPES.MOVE_LIST: {\r\n      const { oldListIndex, newListIndex } = action.payload;\r\n      const newLists = Array.from(state.lists);\r\n      const [removedList] = newLists.splice(oldListIndex, 1);\r\n      newLists.splice(newListIndex, 0, removedList);\r\n      return { lists: newLists };\r\n    }\r\n    case TYPES.DELETE_LIST: {\r\n      const id = action.payload;\r\n      const newList = state.lists.filter((item) => item !== id);\r\n      return { lists: newList };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import * as TYPES from '../types'\r\n\r\nconst initialState = {\r\n    bg: 'rgb(75, 191, 107)'\r\n}\r\n\r\nexport default function ThemeReducer(state = initialState, action){\r\n    switch(action.type){\r\n        case TYPES.CHANGE_THEME:\r\n            return {\r\n                bg: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport list from \"./list/reducer\";\r\nimport card from \"./card/reducer\";\r\nimport board from './board/reducer';\r\nimport theme from './theme/reducer'\r\n\r\nexport default combineReducers({ list, card, board, theme });\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n//redux\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"redux\",\n  storage: storage,\n};\n\nconst persistReducers = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(\n  persistReducers,\n  compose(\n    composeWithDevTools(applyMiddleware(thunk))\n  )\n);\n\nlet persistor = persistStore(store);\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}